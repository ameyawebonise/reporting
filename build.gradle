

/*
 * This build file was auto generated by running the Gradle 'init' task
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_groovy_projects.html
 */

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.akhikhl.gretty'






// Build script is need for plugin:
buildscript { 
repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}
dependencies { 
classpath 'org.akhikhl.gretty:gretty:+'
}
}

// In this section you declare where to find the dependencies of your project
repositories {
		    mavenLocal()
    mavenCentral()
    jcenter()
	}

// In this section you declare the dependencies for your production and test code
dependencies {

    // We use the latest groovy 2.x version for building this library
    compile 'restling:restling-core:0.0.7'

    // We use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
testCompile 'junit:junit:4.12'

}

configurations {

        all*.exclude  group : 'org.slf4j', module: 'slf4j-nop'
all*.exclude  group : 'org.slf4j', module: 'log4j-over-slf4j'

     // Ensure we're not bleeding over
        all*.resolutionStrategy {
            force  'org.codehaus.groovy:groovy-all:2.4.7'
        }
}

/*#jooq {
 #   File commonsSqlDir = new File("src/main/java/org/kaddiya/reporting/sql/commons")
  #  //deleting the  commons sqls that were generated as part of previous build
  #  if (commonsSqlDir.exists()) {
  #      commonsSqlDir.deleteDir()
  #  }
   # someName(sourceSets.main) {
    #    jdbc {
     #       driver = "${databaseDriver}"
    #        url = "${databaseUrl}"
    #        user = "${databaseUser}"
    #        password = "${databasePass}"
    #    }
    #    generator {
    #        database {
    #            name = "${targetDatabaseName}"
    #            inputSchema = "${targetDatabaseInputSchemaName}"
    #        }
    #        generate {
    #            relations = true
    #            deprecated = false
    #            pojos = true
    #            pojosEqualsAndHashCode = true
    #            immutablePojos = false
    #        }
    #        target {
#
    #            packageName = "${jooqTargetPackageName}"
    #            directory = "${jooqTargetDirectory}"
   #         }
   #     }
   # }
#}
*/

gretty {
    servletContainer = 'tomcat8'
    contextPath = ""
}

test {
    systemProperties = System.properties
}


