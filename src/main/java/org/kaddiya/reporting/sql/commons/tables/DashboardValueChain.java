/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.tables.records.DashboardValueChainRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardValueChain extends TableImpl<DashboardValueChainRecord> {

    private static final long serialVersionUID = 2086818397;

    /**
     * The reference instance of <code>proof.dashboard_value_chain</code>
     */
    public static final DashboardValueChain DASHBOARD_VALUE_CHAIN = new DashboardValueChain();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DashboardValueChainRecord> getRecordType() {
        return DashboardValueChainRecord.class;
    }

    /**
     * The column <code>proof.dashboard_value_chain.DASHBOARD_VALUE_CHAIN_ID</code>.
     */
    public final TableField<DashboardValueChainRecord, Integer> DASHBOARD_VALUE_CHAIN_ID = createField("DASHBOARD_VALUE_CHAIN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.dashboard_value_chain.USER_ID</code>.
     */
    public final TableField<DashboardValueChainRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.dashboard_value_chain.USER_DASHBOARD_ID</code>.
     */
    public final TableField<DashboardValueChainRecord, Integer> USER_DASHBOARD_ID = createField("USER_DASHBOARD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.dashboard_value_chain.VALUE_CHAIN_ID</code>.
     */
    public final TableField<DashboardValueChainRecord, Integer> VALUE_CHAIN_ID = createField("VALUE_CHAIN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>proof.dashboard_value_chain</code> table reference
     */
    public DashboardValueChain() {
        this("dashboard_value_chain", null);
    }

    /**
     * Create an aliased <code>proof.dashboard_value_chain</code> table reference
     */
    public DashboardValueChain(String alias) {
        this(alias, DASHBOARD_VALUE_CHAIN);
    }

    private DashboardValueChain(String alias, Table<DashboardValueChainRecord> aliased) {
        this(alias, aliased, null);
    }

    private DashboardValueChain(String alias, Table<DashboardValueChainRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DashboardValueChainRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DASHBOARD_VALUE_CHAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DashboardValueChainRecord> getPrimaryKey() {
        return Keys.KEY_DASHBOARD_VALUE_CHAIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DashboardValueChainRecord>> getKeys() {
        return Arrays.<UniqueKey<DashboardValueChainRecord>>asList(Keys.KEY_DASHBOARD_VALUE_CHAIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DashboardValueChainRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DashboardValueChainRecord, ?>>asList(Keys.FK_DASHBOARD_VALUE_CHAIN_USER_ID, Keys.FK_DASHBOARD_VALUE_CHAIN_DASHBOARD_ID, Keys.FK_DASHBOARD_VALUE_VALUE_CHAIN_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardValueChain as(String alias) {
        return new DashboardValueChain(alias, this);
    }

    /**
     * Rename this table
     */
    public DashboardValueChain rename(String name) {
        return new DashboardValueChain(name, null);
    }
}
