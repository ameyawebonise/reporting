/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.tables.records.ImpactCalculationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImpactCalculation extends TableImpl<ImpactCalculationRecord> {

    private static final long serialVersionUID = 2008047055;

    /**
     * The reference instance of <code>proof.impact_calculation</code>
     */
    public static final ImpactCalculation IMPACT_CALCULATION = new ImpactCalculation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ImpactCalculationRecord> getRecordType() {
        return ImpactCalculationRecord.class;
    }

    /**
     * The column <code>proof.impact_calculation.IMPACT_CALCULATION_ID</code>.
     */
    public final TableField<ImpactCalculationRecord, Integer> IMPACT_CALCULATION_ID = createField("IMPACT_CALCULATION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.impact_calculation.CALCULATION_ID</code>.
     */
    public final TableField<ImpactCalculationRecord, Integer> CALCULATION_ID = createField("CALCULATION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.impact_calculation.VALUE_CHAIN_ID</code>.
     */
    public final TableField<ImpactCalculationRecord, Integer> VALUE_CHAIN_ID = createField("VALUE_CHAIN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>proof.impact_calculation</code> table reference
     */
    public ImpactCalculation() {
        this("impact_calculation", null);
    }

    /**
     * Create an aliased <code>proof.impact_calculation</code> table reference
     */
    public ImpactCalculation(String alias) {
        this(alias, IMPACT_CALCULATION);
    }

    private ImpactCalculation(String alias, Table<ImpactCalculationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ImpactCalculation(String alias, Table<ImpactCalculationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ImpactCalculationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_IMPACT_CALCULATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ImpactCalculationRecord> getPrimaryKey() {
        return Keys.KEY_IMPACT_CALCULATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ImpactCalculationRecord>> getKeys() {
        return Arrays.<UniqueKey<ImpactCalculationRecord>>asList(Keys.KEY_IMPACT_CALCULATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ImpactCalculationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ImpactCalculationRecord, ?>>asList(Keys.FK_IMPACT_CALCULATION_CALCULATION_ID, Keys.FK_IMPACT_CALCULATION_VALUE_CHAIN_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ImpactCalculation as(String alias) {
        return new ImpactCalculation(alias, this);
    }

    /**
     * Rename this table
     */
    public ImpactCalculation rename(String name) {
        return new ImpactCalculation(name, null);
    }
}
