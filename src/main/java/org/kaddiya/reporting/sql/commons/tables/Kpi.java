/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.enums.KpiVisibility;
import org.kaddiya.reporting.sql.commons.tables.records.KpiRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Kpi extends TableImpl<KpiRecord> {

    private static final long serialVersionUID = -1835739093;

    /**
     * The reference instance of <code>proof.kpi</code>
     */
    public static final Kpi KPI = new Kpi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KpiRecord> getRecordType() {
        return KpiRecord.class;
    }

    /**
     * The column <code>proof.kpi.KPI_ID</code>.
     */
    public final TableField<KpiRecord, Integer> KPI_ID = createField("KPI_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.kpi.DATA_SET_ID</code>.
     */
    public final TableField<KpiRecord, Integer> DATA_SET_ID = createField("DATA_SET_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.kpi.KPI_NAME</code>.
     */
    public final TableField<KpiRecord, String> KPI_NAME = createField("KPI_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>proof.kpi.VISIBILITY</code>.
     */
    public final TableField<KpiRecord, KpiVisibility> VISIBILITY = createField("VISIBILITY", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.kaddiya.reporting.sql.commons.enums.KpiVisibility.class), this, "");

    /**
     * The column <code>proof.kpi.DESCRIPTION</code>.
     */
    public final TableField<KpiRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>proof.kpi</code> table reference
     */
    public Kpi() {
        this("kpi", null);
    }

    /**
     * Create an aliased <code>proof.kpi</code> table reference
     */
    public Kpi(String alias) {
        this(alias, KPI);
    }

    private Kpi(String alias, Table<KpiRecord> aliased) {
        this(alias, aliased, null);
    }

    private Kpi(String alias, Table<KpiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<KpiRecord, Integer> getIdentity() {
        return Keys.IDENTITY_KPI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<KpiRecord> getPrimaryKey() {
        return Keys.KEY_KPI_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<KpiRecord>> getKeys() {
        return Arrays.<UniqueKey<KpiRecord>>asList(Keys.KEY_KPI_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<KpiRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<KpiRecord, ?>>asList(Keys.FK_KPI_DATA_SET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Kpi as(String alias) {
        return new Kpi(alias, this);
    }

    /**
     * Rename this table
     */
    public Kpi rename(String name) {
        return new Kpi(name, null);
    }
}
