/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.enums.KpiCombinationTimePeriodType;
import org.kaddiya.reporting.sql.commons.tables.records.KpiCombinationTimePeriodRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpiCombinationTimePeriod extends TableImpl<KpiCombinationTimePeriodRecord> {

    private static final long serialVersionUID = -1459841932;

    /**
     * The reference instance of <code>proof.kpi_combination_time_period</code>
     */
    public static final KpiCombinationTimePeriod KPI_COMBINATION_TIME_PERIOD = new KpiCombinationTimePeriod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KpiCombinationTimePeriodRecord> getRecordType() {
        return KpiCombinationTimePeriodRecord.class;
    }

    /**
     * The column <code>proof.kpi_combination_time_period.KPI_COMBINATION_TIME_PERIOD_ID</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, Integer> KPI_COMBINATION_TIME_PERIOD_ID = createField("KPI_COMBINATION_TIME_PERIOD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.kpi_combination_time_period.KPI_COMBINATION_ID</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, Integer> KPI_COMBINATION_ID = createField("KPI_COMBINATION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.kpi_combination_time_period.TYPE</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, KpiCombinationTimePeriodType> TYPE = createField("TYPE", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.kaddiya.reporting.sql.commons.enums.KpiCombinationTimePeriodType.class), this, "");

    /**
     * The column <code>proof.kpi_combination_time_period.NAME</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>proof.kpi_combination_time_period.START_DATE</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, Timestamp> START_DATE = createField("START_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>proof.kpi_combination_time_period.END_DATE</code>.
     */
    public final TableField<KpiCombinationTimePeriodRecord, Timestamp> END_DATE = createField("END_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>proof.kpi_combination_time_period</code> table reference
     */
    public KpiCombinationTimePeriod() {
        this("kpi_combination_time_period", null);
    }

    /**
     * Create an aliased <code>proof.kpi_combination_time_period</code> table reference
     */
    public KpiCombinationTimePeriod(String alias) {
        this(alias, KPI_COMBINATION_TIME_PERIOD);
    }

    private KpiCombinationTimePeriod(String alias, Table<KpiCombinationTimePeriodRecord> aliased) {
        this(alias, aliased, null);
    }

    private KpiCombinationTimePeriod(String alias, Table<KpiCombinationTimePeriodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<KpiCombinationTimePeriodRecord, Integer> getIdentity() {
        return Keys.IDENTITY_KPI_COMBINATION_TIME_PERIOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<KpiCombinationTimePeriodRecord> getPrimaryKey() {
        return Keys.KEY_KPI_COMBINATION_TIME_PERIOD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<KpiCombinationTimePeriodRecord>> getKeys() {
        return Arrays.<UniqueKey<KpiCombinationTimePeriodRecord>>asList(Keys.KEY_KPI_COMBINATION_TIME_PERIOD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<KpiCombinationTimePeriodRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<KpiCombinationTimePeriodRecord, ?>>asList(Keys.FK_KPI_COMBINATION_TIME_PERIOD_KPI_COMBINATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiCombinationTimePeriod as(String alias) {
        return new KpiCombinationTimePeriod(alias, this);
    }

    /**
     * Rename this table
     */
    public KpiCombinationTimePeriod rename(String name) {
        return new KpiCombinationTimePeriod(name, null);
    }
}
