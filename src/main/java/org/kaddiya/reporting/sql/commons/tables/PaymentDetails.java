/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.enums.PaymentDetailsStatus;
import org.kaddiya.reporting.sql.commons.tables.records.PaymentDetailsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentDetails extends TableImpl<PaymentDetailsRecord> {

    private static final long serialVersionUID = -189066945;

    /**
     * The reference instance of <code>proof.payment_details</code>
     */
    public static final PaymentDetails PAYMENT_DETAILS = new PaymentDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentDetailsRecord> getRecordType() {
        return PaymentDetailsRecord.class;
    }

    /**
     * The column <code>proof.payment_details.PAYMENT_DETAILS_ID</code>.
     */
    public final TableField<PaymentDetailsRecord, Integer> PAYMENT_DETAILS_ID = createField("PAYMENT_DETAILS_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.payment_details.PAYMENT_MODE_ID</code>.
     */
    public final TableField<PaymentDetailsRecord, Integer> PAYMENT_MODE_ID = createField("PAYMENT_MODE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.payment_details.ORG_PLAN_ID</code>.
     */
    public final TableField<PaymentDetailsRecord, Integer> ORG_PLAN_ID = createField("ORG_PLAN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.payment_details.CREATED_BY_USER_ID</code>.
     */
    public final TableField<PaymentDetailsRecord, Integer> CREATED_BY_USER_ID = createField("CREATED_BY_USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.payment_details.CREATED_ON</code>.
     */
    public final TableField<PaymentDetailsRecord, Timestamp> CREATED_ON = createField("CREATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>proof.payment_details.STATUS</code>.
     */
    public final TableField<PaymentDetailsRecord, PaymentDetailsStatus> STATUS = createField("STATUS", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.kaddiya.reporting.sql.commons.enums.PaymentDetailsStatus.class), this, "");

    /**
     * Create a <code>proof.payment_details</code> table reference
     */
    public PaymentDetails() {
        this("payment_details", null);
    }

    /**
     * Create an aliased <code>proof.payment_details</code> table reference
     */
    public PaymentDetails(String alias) {
        this(alias, PAYMENT_DETAILS);
    }

    private PaymentDetails(String alias, Table<PaymentDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentDetails(String alias, Table<PaymentDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentDetailsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYMENT_DETAILS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentDetailsRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENT_DETAILS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentDetailsRecord>>asList(Keys.KEY_PAYMENT_DETAILS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PaymentDetailsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PaymentDetailsRecord, ?>>asList(Keys.FK_PAYMENT_DETAILS_PAYMENT_MODE_ID, Keys.FK_PAYMENT_DETAILS_ORG_PLAN_ID, Keys.FK_PAYMENT_DETAILS_CREATED_BY_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentDetails as(String alias) {
        return new PaymentDetails(alias, this);
    }

    /**
     * Rename this table
     */
    public PaymentDetails rename(String name) {
        return new PaymentDetails(name, null);
    }
}
