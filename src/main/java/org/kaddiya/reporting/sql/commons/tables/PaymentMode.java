/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.tables.records.PaymentModeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentMode extends TableImpl<PaymentModeRecord> {

    private static final long serialVersionUID = -126773618;

    /**
     * The reference instance of <code>proof.payment_mode</code>
     */
    public static final PaymentMode PAYMENT_MODE = new PaymentMode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentModeRecord> getRecordType() {
        return PaymentModeRecord.class;
    }

    /**
     * The column <code>proof.payment_mode.PAYMENT_MODE_ID</code>.
     */
    public final TableField<PaymentModeRecord, Integer> PAYMENT_MODE_ID = createField("PAYMENT_MODE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.payment_mode.PAYMENT_MODE_NAME</code>.
     */
    public final TableField<PaymentModeRecord, String> PAYMENT_MODE_NAME = createField("PAYMENT_MODE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>proof.payment_mode</code> table reference
     */
    public PaymentMode() {
        this("payment_mode", null);
    }

    /**
     * Create an aliased <code>proof.payment_mode</code> table reference
     */
    public PaymentMode(String alias) {
        this(alias, PAYMENT_MODE);
    }

    private PaymentMode(String alias, Table<PaymentModeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentMode(String alias, Table<PaymentModeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PaymentModeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYMENT_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentModeRecord> getPrimaryKey() {
        return Keys.KEY_PAYMENT_MODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentModeRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentModeRecord>>asList(Keys.KEY_PAYMENT_MODE_PRIMARY, Keys.KEY_PAYMENT_MODE_PAYMENT_MODE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentMode as(String alias) {
        return new PaymentMode(alias, this);
    }

    /**
     * Rename this table
     */
    public PaymentMode rename(String name) {
        return new PaymentMode(name, null);
    }
}
