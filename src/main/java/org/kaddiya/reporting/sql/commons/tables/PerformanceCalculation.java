/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.tables.records.PerformanceCalculationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PerformanceCalculation extends TableImpl<PerformanceCalculationRecord> {

    private static final long serialVersionUID = 1465393056;

    /**
     * The reference instance of <code>proof.performance_calculation</code>
     */
    public static final PerformanceCalculation PERFORMANCE_CALCULATION = new PerformanceCalculation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PerformanceCalculationRecord> getRecordType() {
        return PerformanceCalculationRecord.class;
    }

    /**
     * The column <code>proof.performance_calculation.PERFORMANCE_CALCULATION_ID</code>.
     */
    public final TableField<PerformanceCalculationRecord, Integer> PERFORMANCE_CALCULATION_ID = createField("PERFORMANCE_CALCULATION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.performance_calculation.CAUSE_ID</code>.
     */
    public final TableField<PerformanceCalculationRecord, Integer> CAUSE_ID = createField("CAUSE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.performance_calculation.EFFECT_ID</code>.
     */
    public final TableField<PerformanceCalculationRecord, Integer> EFFECT_ID = createField("EFFECT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.performance_calculation.CALCULATION_ID</code>.
     */
    public final TableField<PerformanceCalculationRecord, Integer> CALCULATION_ID = createField("CALCULATION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.performance_calculation.END_DATE</code>.
     */
    public final TableField<PerformanceCalculationRecord, Date> END_DATE = createField("END_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>proof.performance_calculation</code> table reference
     */
    public PerformanceCalculation() {
        this("performance_calculation", null);
    }

    /**
     * Create an aliased <code>proof.performance_calculation</code> table reference
     */
    public PerformanceCalculation(String alias) {
        this(alias, PERFORMANCE_CALCULATION);
    }

    private PerformanceCalculation(String alias, Table<PerformanceCalculationRecord> aliased) {
        this(alias, aliased, null);
    }

    private PerformanceCalculation(String alias, Table<PerformanceCalculationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PerformanceCalculationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PERFORMANCE_CALCULATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PerformanceCalculationRecord> getPrimaryKey() {
        return Keys.KEY_PERFORMANCE_CALCULATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PerformanceCalculationRecord>> getKeys() {
        return Arrays.<UniqueKey<PerformanceCalculationRecord>>asList(Keys.KEY_PERFORMANCE_CALCULATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PerformanceCalculationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PerformanceCalculationRecord, ?>>asList(Keys.FK_PERFORMANCE_CALCULATION_CAUSE_ID, Keys.FK_PERFORMANCE_CALCULATION_EFFECT_ID, Keys.FK_PERFORMANCE_CALCULATION_CALCULATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PerformanceCalculation as(String alias) {
        return new PerformanceCalculation(alias, this);
    }

    /**
     * Rename this table
     */
    public PerformanceCalculation rename(String name) {
        return new PerformanceCalculation(name, null);
    }
}
