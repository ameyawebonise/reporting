/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.enums.SubscriptionPlanChargesCurrency;
import org.kaddiya.reporting.sql.commons.tables.records.SubscriptionPlanChargesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscriptionPlanCharges extends TableImpl<SubscriptionPlanChargesRecord> {

    private static final long serialVersionUID = 1995665131;

    /**
     * The reference instance of <code>proof.subscription_plan_charges</code>
     */
    public static final SubscriptionPlanCharges SUBSCRIPTION_PLAN_CHARGES = new SubscriptionPlanCharges();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SubscriptionPlanChargesRecord> getRecordType() {
        return SubscriptionPlanChargesRecord.class;
    }

    /**
     * The column <code>proof.subscription_plan_charges.PLAN_CHARGES_ID</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, Integer> PLAN_CHARGES_ID = createField("PLAN_CHARGES_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.subscription_plan_charges.PLAN_ID</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, Integer> PLAN_ID = createField("PLAN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.subscription_plan_charges.CURRENCY</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, SubscriptionPlanChargesCurrency> CURRENCY = createField("CURRENCY", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.kaddiya.reporting.sql.commons.enums.SubscriptionPlanChargesCurrency.class), this, "");

    /**
     * The column <code>proof.subscription_plan_charges.AMOUNT</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, Double> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>proof.subscription_plan_charges.IS_INCLUSIVE_OF_ALL_TAXES</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, Boolean> IS_INCLUSIVE_OF_ALL_TAXES = createField("IS_INCLUSIVE_OF_ALL_TAXES", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>proof.subscription_plan_charges.ADDITIONAL_CHARGES</code>.
     */
    public final TableField<SubscriptionPlanChargesRecord, String> ADDITIONAL_CHARGES = createField("ADDITIONAL_CHARGES", org.jooq.impl.SQLDataType.VARCHAR.length(225), this, "");

    /**
     * Create a <code>proof.subscription_plan_charges</code> table reference
     */
    public SubscriptionPlanCharges() {
        this("subscription_plan_charges", null);
    }

    /**
     * Create an aliased <code>proof.subscription_plan_charges</code> table reference
     */
    public SubscriptionPlanCharges(String alias) {
        this(alias, SUBSCRIPTION_PLAN_CHARGES);
    }

    private SubscriptionPlanCharges(String alias, Table<SubscriptionPlanChargesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SubscriptionPlanCharges(String alias, Table<SubscriptionPlanChargesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SubscriptionPlanChargesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SUBSCRIPTION_PLAN_CHARGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SubscriptionPlanChargesRecord> getPrimaryKey() {
        return Keys.KEY_SUBSCRIPTION_PLAN_CHARGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SubscriptionPlanChargesRecord>> getKeys() {
        return Arrays.<UniqueKey<SubscriptionPlanChargesRecord>>asList(Keys.KEY_SUBSCRIPTION_PLAN_CHARGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SubscriptionPlanChargesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SubscriptionPlanChargesRecord, ?>>asList(Keys.FK_PLAN_CHARGES_PLAN_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SubscriptionPlanCharges as(String alias) {
        return new SubscriptionPlanCharges(alias, this);
    }

    /**
     * Rename this table
     */
    public SubscriptionPlanCharges rename(String name) {
        return new SubscriptionPlanCharges(name, null);
    }
}
