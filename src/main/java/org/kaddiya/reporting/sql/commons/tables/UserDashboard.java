/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.enums.UserDashboardStatus;
import org.kaddiya.reporting.sql.commons.tables.records.UserDashboardRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDashboard extends TableImpl<UserDashboardRecord> {

    private static final long serialVersionUID = 1264982456;

    /**
     * The reference instance of <code>proof.user_dashboard</code>
     */
    public static final UserDashboard USER_DASHBOARD = new UserDashboard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDashboardRecord> getRecordType() {
        return UserDashboardRecord.class;
    }

    /**
     * The column <code>proof.user_dashboard.USER_DASHBOARD_ID</code>.
     */
    public final TableField<UserDashboardRecord, Integer> USER_DASHBOARD_ID = createField("USER_DASHBOARD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.user_dashboard.TITLE</code>.
     */
    public final TableField<UserDashboardRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

    /**
     * The column <code>proof.user_dashboard.STATUS</code>.
     */
    public final TableField<UserDashboardRecord, UserDashboardStatus> STATUS = createField("STATUS", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.kaddiya.reporting.sql.commons.enums.UserDashboardStatus.class), this, "");

    /**
     * The column <code>proof.user_dashboard.OWNER_ID</code>.
     */
    public final TableField<UserDashboardRecord, Integer> OWNER_ID = createField("OWNER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.user_dashboard.CREATED_AT</code>.
     */
    public final TableField<UserDashboardRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>proof.user_dashboard</code> table reference
     */
    public UserDashboard() {
        this("user_dashboard", null);
    }

    /**
     * Create an aliased <code>proof.user_dashboard</code> table reference
     */
    public UserDashboard(String alias) {
        this(alias, USER_DASHBOARD);
    }

    private UserDashboard(String alias, Table<UserDashboardRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDashboard(String alias, Table<UserDashboardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserDashboardRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_DASHBOARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDashboardRecord> getPrimaryKey() {
        return Keys.KEY_USER_DASHBOARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDashboardRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDashboardRecord>>asList(Keys.KEY_USER_DASHBOARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserDashboardRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserDashboardRecord, ?>>asList(Keys.FK_USER_DASHBOARD_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDashboard as(String alias) {
        return new UserDashboard(alias, this);
    }

    /**
     * Rename this table
     */
    public UserDashboard rename(String name) {
        return new UserDashboard(name, null);
    }
}
