/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.kaddiya.reporting.sql.commons.Keys;
import org.kaddiya.reporting.sql.commons.Proof;
import org.kaddiya.reporting.sql.commons.tables.records.UserDashboardCategoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDashboardCategory extends TableImpl<UserDashboardCategoryRecord> {

    private static final long serialVersionUID = -422946856;

    /**
     * The reference instance of <code>proof.user_dashboard_category</code>
     */
    public static final UserDashboardCategory USER_DASHBOARD_CATEGORY = new UserDashboardCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDashboardCategoryRecord> getRecordType() {
        return UserDashboardCategoryRecord.class;
    }

    /**
     * The column <code>proof.user_dashboard_category.USER_DASHBOARD_CATEGORY_ID</code>.
     */
    public final TableField<UserDashboardCategoryRecord, Integer> USER_DASHBOARD_CATEGORY_ID = createField("USER_DASHBOARD_CATEGORY_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.user_dashboard_category.USER_DASHBOARD_ID</code>.
     */
    public final TableField<UserDashboardCategoryRecord, Integer> USER_DASHBOARD_ID = createField("USER_DASHBOARD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>proof.user_dashboard_category.CATEGORY_ID</code>.
     */
    public final TableField<UserDashboardCategoryRecord, Integer> CATEGORY_ID = createField("CATEGORY_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>proof.user_dashboard_category</code> table reference
     */
    public UserDashboardCategory() {
        this("user_dashboard_category", null);
    }

    /**
     * Create an aliased <code>proof.user_dashboard_category</code> table reference
     */
    public UserDashboardCategory(String alias) {
        this(alias, USER_DASHBOARD_CATEGORY);
    }

    private UserDashboardCategory(String alias, Table<UserDashboardCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDashboardCategory(String alias, Table<UserDashboardCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Proof.PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserDashboardCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_DASHBOARD_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDashboardCategoryRecord> getPrimaryKey() {
        return Keys.KEY_USER_DASHBOARD_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDashboardCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDashboardCategoryRecord>>asList(Keys.KEY_USER_DASHBOARD_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserDashboardCategoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserDashboardCategoryRecord, ?>>asList(Keys.FK_USER_DASHBOARD_CATEGORY_DASHBOARD_ID, Keys.FK_USER_DASHBOARD_CATEGORY_CATEGORY_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDashboardCategory as(String alias) {
        return new UserDashboardCategory(alias, this);
    }

    /**
     * Rename this table
     */
    public UserDashboardCategory rename(String name) {
        return new UserDashboardCategory(name, null);
    }
}
