/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.pojos;


import java.io.Serializable;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.kaddiya.reporting.sql.commons.enums.CalculationVisibility;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calculation implements Serializable {

    private static final long serialVersionUID = 1129852910;

    private Integer               calculationId;
    private String                calculationName;
    private Integer               userId;
    private Integer               calculationTypeId;
    private Date                  startDate;
    private Timestamp             createdOn;
    private CalculationVisibility visibility;

    public Calculation() {}

    public Calculation(Calculation value) {
        this.calculationId = value.calculationId;
        this.calculationName = value.calculationName;
        this.userId = value.userId;
        this.calculationTypeId = value.calculationTypeId;
        this.startDate = value.startDate;
        this.createdOn = value.createdOn;
        this.visibility = value.visibility;
    }

    public Calculation(
        Integer               calculationId,
        String                calculationName,
        Integer               userId,
        Integer               calculationTypeId,
        Date                  startDate,
        Timestamp             createdOn,
        CalculationVisibility visibility
    ) {
        this.calculationId = calculationId;
        this.calculationName = calculationName;
        this.userId = userId;
        this.calculationTypeId = calculationTypeId;
        this.startDate = startDate;
        this.createdOn = createdOn;
        this.visibility = visibility;
    }

    public Integer getCalculationId() {
        return this.calculationId;
    }

    public void setCalculationId(Integer calculationId) {
        this.calculationId = calculationId;
    }

    public String getCalculationName() {
        return this.calculationName;
    }

    public void setCalculationName(String calculationName) {
        this.calculationName = calculationName;
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public Integer getCalculationTypeId() {
        return this.calculationTypeId;
    }

    public void setCalculationTypeId(Integer calculationTypeId) {
        this.calculationTypeId = calculationTypeId;
    }

    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    public CalculationVisibility getVisibility() {
        return this.visibility;
    }

    public void setVisibility(CalculationVisibility visibility) {
        this.visibility = visibility;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Calculation other = (Calculation) obj;
        if (calculationId == null) {
            if (other.calculationId != null)
                return false;
        }
        else if (!calculationId.equals(other.calculationId))
            return false;
        if (calculationName == null) {
            if (other.calculationName != null)
                return false;
        }
        else if (!calculationName.equals(other.calculationName))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (calculationTypeId == null) {
            if (other.calculationTypeId != null)
                return false;
        }
        else if (!calculationTypeId.equals(other.calculationTypeId))
            return false;
        if (startDate == null) {
            if (other.startDate != null)
                return false;
        }
        else if (!startDate.equals(other.startDate))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (visibility == null) {
            if (other.visibility != null)
                return false;
        }
        else if (!visibility.equals(other.visibility))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((calculationId == null) ? 0 : calculationId.hashCode());
        result = prime * result + ((calculationName == null) ? 0 : calculationName.hashCode());
        result = prime * result + ((userId == null) ? 0 : userId.hashCode());
        result = prime * result + ((calculationTypeId == null) ? 0 : calculationTypeId.hashCode());
        result = prime * result + ((startDate == null) ? 0 : startDate.hashCode());
        result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
        result = prime * result + ((visibility == null) ? 0 : visibility.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Calculation (");

        sb.append(calculationId);
        sb.append(", ").append(calculationName);
        sb.append(", ").append(userId);
        sb.append(", ").append(calculationTypeId);
        sb.append(", ").append(startDate);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(visibility);

        sb.append(")");
        return sb.toString();
    }
}
