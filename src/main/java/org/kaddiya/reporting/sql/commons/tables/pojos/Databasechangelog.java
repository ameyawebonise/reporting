/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasechangelog implements Serializable {

    private static final long serialVersionUID = 1759167132;

    private String    id;
    private String    author;
    private String    filename;
    private Timestamp dateexecuted;
    private Integer   orderexecuted;
    private String    exectype;
    private String    md5sum;
    private String    description;
    private String    comments;
    private String    tag;
    private String    liquibase;
    private String    contexts;
    private String    labels;

    public Databasechangelog() {}

    public Databasechangelog(Databasechangelog value) {
        this.id = value.id;
        this.author = value.author;
        this.filename = value.filename;
        this.dateexecuted = value.dateexecuted;
        this.orderexecuted = value.orderexecuted;
        this.exectype = value.exectype;
        this.md5sum = value.md5sum;
        this.description = value.description;
        this.comments = value.comments;
        this.tag = value.tag;
        this.liquibase = value.liquibase;
        this.contexts = value.contexts;
        this.labels = value.labels;
    }

    public Databasechangelog(
        String    id,
        String    author,
        String    filename,
        Timestamp dateexecuted,
        Integer   orderexecuted,
        String    exectype,
        String    md5sum,
        String    description,
        String    comments,
        String    tag,
        String    liquibase,
        String    contexts,
        String    labels
    ) {
        this.id = id;
        this.author = author;
        this.filename = filename;
        this.dateexecuted = dateexecuted;
        this.orderexecuted = orderexecuted;
        this.exectype = exectype;
        this.md5sum = md5sum;
        this.description = description;
        this.comments = comments;
        this.tag = tag;
        this.liquibase = liquibase;
        this.contexts = contexts;
        this.labels = labels;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getAuthor() {
        return this.author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public String getFilename() {
        return this.filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    public Timestamp getDateexecuted() {
        return this.dateexecuted;
    }

    public void setDateexecuted(Timestamp dateexecuted) {
        this.dateexecuted = dateexecuted;
    }

    public Integer getOrderexecuted() {
        return this.orderexecuted;
    }

    public void setOrderexecuted(Integer orderexecuted) {
        this.orderexecuted = orderexecuted;
    }

    public String getExectype() {
        return this.exectype;
    }

    public void setExectype(String exectype) {
        this.exectype = exectype;
    }

    public String getMd5sum() {
        return this.md5sum;
    }

    public void setMd5sum(String md5sum) {
        this.md5sum = md5sum;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    public String getTag() {
        return this.tag;
    }

    public void setTag(String tag) {
        this.tag = tag;
    }

    public String getLiquibase() {
        return this.liquibase;
    }

    public void setLiquibase(String liquibase) {
        this.liquibase = liquibase;
    }

    public String getContexts() {
        return this.contexts;
    }

    public void setContexts(String contexts) {
        this.contexts = contexts;
    }

    public String getLabels() {
        return this.labels;
    }

    public void setLabels(String labels) {
        this.labels = labels;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Databasechangelog other = (Databasechangelog) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (author == null) {
            if (other.author != null)
                return false;
        }
        else if (!author.equals(other.author))
            return false;
        if (filename == null) {
            if (other.filename != null)
                return false;
        }
        else if (!filename.equals(other.filename))
            return false;
        if (dateexecuted == null) {
            if (other.dateexecuted != null)
                return false;
        }
        else if (!dateexecuted.equals(other.dateexecuted))
            return false;
        if (orderexecuted == null) {
            if (other.orderexecuted != null)
                return false;
        }
        else if (!orderexecuted.equals(other.orderexecuted))
            return false;
        if (exectype == null) {
            if (other.exectype != null)
                return false;
        }
        else if (!exectype.equals(other.exectype))
            return false;
        if (md5sum == null) {
            if (other.md5sum != null)
                return false;
        }
        else if (!md5sum.equals(other.md5sum))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (comments == null) {
            if (other.comments != null)
                return false;
        }
        else if (!comments.equals(other.comments))
            return false;
        if (tag == null) {
            if (other.tag != null)
                return false;
        }
        else if (!tag.equals(other.tag))
            return false;
        if (liquibase == null) {
            if (other.liquibase != null)
                return false;
        }
        else if (!liquibase.equals(other.liquibase))
            return false;
        if (contexts == null) {
            if (other.contexts != null)
                return false;
        }
        else if (!contexts.equals(other.contexts))
            return false;
        if (labels == null) {
            if (other.labels != null)
                return false;
        }
        else if (!labels.equals(other.labels))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((id == null) ? 0 : id.hashCode());
        result = prime * result + ((author == null) ? 0 : author.hashCode());
        result = prime * result + ((filename == null) ? 0 : filename.hashCode());
        result = prime * result + ((dateexecuted == null) ? 0 : dateexecuted.hashCode());
        result = prime * result + ((orderexecuted == null) ? 0 : orderexecuted.hashCode());
        result = prime * result + ((exectype == null) ? 0 : exectype.hashCode());
        result = prime * result + ((md5sum == null) ? 0 : md5sum.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((comments == null) ? 0 : comments.hashCode());
        result = prime * result + ((tag == null) ? 0 : tag.hashCode());
        result = prime * result + ((liquibase == null) ? 0 : liquibase.hashCode());
        result = prime * result + ((contexts == null) ? 0 : contexts.hashCode());
        result = prime * result + ((labels == null) ? 0 : labels.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Databasechangelog (");

        sb.append(id);
        sb.append(", ").append(author);
        sb.append(", ").append(filename);
        sb.append(", ").append(dateexecuted);
        sb.append(", ").append(orderexecuted);
        sb.append(", ").append(exectype);
        sb.append(", ").append(md5sum);
        sb.append(", ").append(description);
        sb.append(", ").append(comments);
        sb.append(", ").append(tag);
        sb.append(", ").append(liquibase);
        sb.append(", ").append(contexts);
        sb.append(", ").append(labels);

        sb.append(")");
        return sb.toString();
    }
}
