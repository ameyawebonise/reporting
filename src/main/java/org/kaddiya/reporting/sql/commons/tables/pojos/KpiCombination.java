/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.kaddiya.reporting.sql.commons.enums.KpiCombinationVisibility;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpiCombination implements Serializable {

    private static final long serialVersionUID = -560737652;

    private Integer                  kpiCombinationId;
    private Integer                  userId;
    private Integer                  causeId;
    private Integer                  effectId;
    private Timestamp                uploadedAt;
    private KpiCombinationVisibility visibility;

    public KpiCombination() {}

    public KpiCombination(KpiCombination value) {
        this.kpiCombinationId = value.kpiCombinationId;
        this.userId = value.userId;
        this.causeId = value.causeId;
        this.effectId = value.effectId;
        this.uploadedAt = value.uploadedAt;
        this.visibility = value.visibility;
    }

    public KpiCombination(
        Integer                  kpiCombinationId,
        Integer                  userId,
        Integer                  causeId,
        Integer                  effectId,
        Timestamp                uploadedAt,
        KpiCombinationVisibility visibility
    ) {
        this.kpiCombinationId = kpiCombinationId;
        this.userId = userId;
        this.causeId = causeId;
        this.effectId = effectId;
        this.uploadedAt = uploadedAt;
        this.visibility = visibility;
    }

    public Integer getKpiCombinationId() {
        return this.kpiCombinationId;
    }

    public void setKpiCombinationId(Integer kpiCombinationId) {
        this.kpiCombinationId = kpiCombinationId;
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public Integer getCauseId() {
        return this.causeId;
    }

    public void setCauseId(Integer causeId) {
        this.causeId = causeId;
    }

    public Integer getEffectId() {
        return this.effectId;
    }

    public void setEffectId(Integer effectId) {
        this.effectId = effectId;
    }

    public Timestamp getUploadedAt() {
        return this.uploadedAt;
    }

    public void setUploadedAt(Timestamp uploadedAt) {
        this.uploadedAt = uploadedAt;
    }

    public KpiCombinationVisibility getVisibility() {
        return this.visibility;
    }

    public void setVisibility(KpiCombinationVisibility visibility) {
        this.visibility = visibility;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final KpiCombination other = (KpiCombination) obj;
        if (kpiCombinationId == null) {
            if (other.kpiCombinationId != null)
                return false;
        }
        else if (!kpiCombinationId.equals(other.kpiCombinationId))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (causeId == null) {
            if (other.causeId != null)
                return false;
        }
        else if (!causeId.equals(other.causeId))
            return false;
        if (effectId == null) {
            if (other.effectId != null)
                return false;
        }
        else if (!effectId.equals(other.effectId))
            return false;
        if (uploadedAt == null) {
            if (other.uploadedAt != null)
                return false;
        }
        else if (!uploadedAt.equals(other.uploadedAt))
            return false;
        if (visibility == null) {
            if (other.visibility != null)
                return false;
        }
        else if (!visibility.equals(other.visibility))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((kpiCombinationId == null) ? 0 : kpiCombinationId.hashCode());
        result = prime * result + ((userId == null) ? 0 : userId.hashCode());
        result = prime * result + ((causeId == null) ? 0 : causeId.hashCode());
        result = prime * result + ((effectId == null) ? 0 : effectId.hashCode());
        result = prime * result + ((uploadedAt == null) ? 0 : uploadedAt.hashCode());
        result = prime * result + ((visibility == null) ? 0 : visibility.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("KpiCombination (");

        sb.append(kpiCombinationId);
        sb.append(", ").append(userId);
        sb.append(", ").append(causeId);
        sb.append(", ").append(effectId);
        sb.append(", ").append(uploadedAt);
        sb.append(", ").append(visibility);

        sb.append(")");
        return sb.toString();
    }
}
