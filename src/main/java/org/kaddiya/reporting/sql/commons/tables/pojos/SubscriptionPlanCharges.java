/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;

import org.kaddiya.reporting.sql.commons.enums.SubscriptionPlanChargesCurrency;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscriptionPlanCharges implements Serializable {

    private static final long serialVersionUID = -521956957;

    private Integer                         planChargesId;
    private Integer                         planId;
    private SubscriptionPlanChargesCurrency currency;
    private Double                          amount;
    private Boolean                         isInclusiveOfAllTaxes;
    private String                          additionalCharges;

    public SubscriptionPlanCharges() {}

    public SubscriptionPlanCharges(SubscriptionPlanCharges value) {
        this.planChargesId = value.planChargesId;
        this.planId = value.planId;
        this.currency = value.currency;
        this.amount = value.amount;
        this.isInclusiveOfAllTaxes = value.isInclusiveOfAllTaxes;
        this.additionalCharges = value.additionalCharges;
    }

    public SubscriptionPlanCharges(
        Integer                         planChargesId,
        Integer                         planId,
        SubscriptionPlanChargesCurrency currency,
        Double                          amount,
        Boolean                         isInclusiveOfAllTaxes,
        String                          additionalCharges
    ) {
        this.planChargesId = planChargesId;
        this.planId = planId;
        this.currency = currency;
        this.amount = amount;
        this.isInclusiveOfAllTaxes = isInclusiveOfAllTaxes;
        this.additionalCharges = additionalCharges;
    }

    public Integer getPlanChargesId() {
        return this.planChargesId;
    }

    public void setPlanChargesId(Integer planChargesId) {
        this.planChargesId = planChargesId;
    }

    public Integer getPlanId() {
        return this.planId;
    }

    public void setPlanId(Integer planId) {
        this.planId = planId;
    }

    public SubscriptionPlanChargesCurrency getCurrency() {
        return this.currency;
    }

    public void setCurrency(SubscriptionPlanChargesCurrency currency) {
        this.currency = currency;
    }

    public Double getAmount() {
        return this.amount;
    }

    public void setAmount(Double amount) {
        this.amount = amount;
    }

    public Boolean getIsInclusiveOfAllTaxes() {
        return this.isInclusiveOfAllTaxes;
    }

    public void setIsInclusiveOfAllTaxes(Boolean isInclusiveOfAllTaxes) {
        this.isInclusiveOfAllTaxes = isInclusiveOfAllTaxes;
    }

    public String getAdditionalCharges() {
        return this.additionalCharges;
    }

    public void setAdditionalCharges(String additionalCharges) {
        this.additionalCharges = additionalCharges;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SubscriptionPlanCharges other = (SubscriptionPlanCharges) obj;
        if (planChargesId == null) {
            if (other.planChargesId != null)
                return false;
        }
        else if (!planChargesId.equals(other.planChargesId))
            return false;
        if (planId == null) {
            if (other.planId != null)
                return false;
        }
        else if (!planId.equals(other.planId))
            return false;
        if (currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!currency.equals(other.currency))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (isInclusiveOfAllTaxes == null) {
            if (other.isInclusiveOfAllTaxes != null)
                return false;
        }
        else if (!isInclusiveOfAllTaxes.equals(other.isInclusiveOfAllTaxes))
            return false;
        if (additionalCharges == null) {
            if (other.additionalCharges != null)
                return false;
        }
        else if (!additionalCharges.equals(other.additionalCharges))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((planChargesId == null) ? 0 : planChargesId.hashCode());
        result = prime * result + ((planId == null) ? 0 : planId.hashCode());
        result = prime * result + ((currency == null) ? 0 : currency.hashCode());
        result = prime * result + ((amount == null) ? 0 : amount.hashCode());
        result = prime * result + ((isInclusiveOfAllTaxes == null) ? 0 : isInclusiveOfAllTaxes.hashCode());
        result = prime * result + ((additionalCharges == null) ? 0 : additionalCharges.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SubscriptionPlanCharges (");

        sb.append(planChargesId);
        sb.append(", ").append(planId);
        sb.append(", ").append(currency);
        sb.append(", ").append(amount);
        sb.append(", ").append(isInclusiveOfAllTaxes);
        sb.append(", ").append(additionalCharges);

        sb.append(")");
        return sb.toString();
    }
}
