/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.kaddiya.reporting.sql.commons.enums.TagStatus;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tag implements Serializable {

    private static final long serialVersionUID = 1057805623;

    private Integer   tagId;
    private String    tagName;
    private String    tagDescription;
    private TagStatus status;
    private Timestamp createdOn;

    public Tag() {}

    public Tag(Tag value) {
        this.tagId = value.tagId;
        this.tagName = value.tagName;
        this.tagDescription = value.tagDescription;
        this.status = value.status;
        this.createdOn = value.createdOn;
    }

    public Tag(
        Integer   tagId,
        String    tagName,
        String    tagDescription,
        TagStatus status,
        Timestamp createdOn
    ) {
        this.tagId = tagId;
        this.tagName = tagName;
        this.tagDescription = tagDescription;
        this.status = status;
        this.createdOn = createdOn;
    }

    public Integer getTagId() {
        return this.tagId;
    }

    public void setTagId(Integer tagId) {
        this.tagId = tagId;
    }

    public String getTagName() {
        return this.tagName;
    }

    public void setTagName(String tagName) {
        this.tagName = tagName;
    }

    public String getTagDescription() {
        return this.tagDescription;
    }

    public void setTagDescription(String tagDescription) {
        this.tagDescription = tagDescription;
    }

    public TagStatus getStatus() {
        return this.status;
    }

    public void setStatus(TagStatus status) {
        this.status = status;
    }

    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Tag other = (Tag) obj;
        if (tagId == null) {
            if (other.tagId != null)
                return false;
        }
        else if (!tagId.equals(other.tagId))
            return false;
        if (tagName == null) {
            if (other.tagName != null)
                return false;
        }
        else if (!tagName.equals(other.tagName))
            return false;
        if (tagDescription == null) {
            if (other.tagDescription != null)
                return false;
        }
        else if (!tagDescription.equals(other.tagDescription))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((tagId == null) ? 0 : tagId.hashCode());
        result = prime * result + ((tagName == null) ? 0 : tagName.hashCode());
        result = prime * result + ((tagDescription == null) ? 0 : tagDescription.hashCode());
        result = prime * result + ((status == null) ? 0 : status.hashCode());
        result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Tag (");

        sb.append(tagId);
        sb.append(", ").append(tagName);
        sb.append(", ").append(tagDescription);
        sb.append(", ").append(status);
        sb.append(", ").append(createdOn);

        sb.append(")");
        return sb.toString();
    }
}
