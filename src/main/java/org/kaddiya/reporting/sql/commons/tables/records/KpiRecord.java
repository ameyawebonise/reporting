/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.kaddiya.reporting.sql.commons.enums.KpiVisibility;
import org.kaddiya.reporting.sql.commons.tables.Kpi;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpiRecord extends UpdatableRecordImpl<KpiRecord> implements Record5<Integer, Integer, String, KpiVisibility, String> {

    private static final long serialVersionUID = 171406992;

    /**
     * Setter for <code>proof.kpi.KPI_ID</code>.
     */
    public void setKpiId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>proof.kpi.KPI_ID</code>.
     */
    public Integer getKpiId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>proof.kpi.DATA_SET_ID</code>.
     */
    public void setDataSetId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>proof.kpi.DATA_SET_ID</code>.
     */
    public Integer getDataSetId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>proof.kpi.KPI_NAME</code>.
     */
    public void setKpiName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>proof.kpi.KPI_NAME</code>.
     */
    public String getKpiName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>proof.kpi.VISIBILITY</code>.
     */
    public void setVisibility(KpiVisibility value) {
        set(3, value);
    }

    /**
     * Getter for <code>proof.kpi.VISIBILITY</code>.
     */
    public KpiVisibility getVisibility() {
        return (KpiVisibility) get(3);
    }

    /**
     * Setter for <code>proof.kpi.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>proof.kpi.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, String, KpiVisibility, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, String, KpiVisibility, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Kpi.KPI.KPI_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Kpi.KPI.DATA_SET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Kpi.KPI.KPI_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<KpiVisibility> field4() {
        return Kpi.KPI.VISIBILITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Kpi.KPI.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getKpiId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDataSetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getKpiName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiVisibility value4() {
        return getVisibility();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value1(Integer value) {
        setKpiId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value2(Integer value) {
        setDataSetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value3(String value) {
        setKpiName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value4(KpiVisibility value) {
        setVisibility(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord values(Integer value1, Integer value2, String value3, KpiVisibility value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KpiRecord
     */
    public KpiRecord() {
        super(Kpi.KPI);
    }

    /**
     * Create a detached, initialised KpiRecord
     */
    public KpiRecord(Integer kpiId, Integer dataSetId, String kpiName, KpiVisibility visibility, String description) {
        super(Kpi.KPI);

        set(0, kpiId);
        set(1, dataSetId);
        set(2, kpiName);
        set(3, visibility);
        set(4, description);
    }
}
