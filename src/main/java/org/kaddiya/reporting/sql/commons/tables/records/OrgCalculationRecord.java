/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.kaddiya.reporting.sql.commons.tables.OrgCalculation;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrgCalculationRecord extends UpdatableRecordImpl<OrgCalculationRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1064340276;

    /**
     * Setter for <code>proof.org_calculation.ORG_CALCULATION_ID</code>.
     */
    public void setOrgCalculationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>proof.org_calculation.ORG_CALCULATION_ID</code>.
     */
    public Integer getOrgCalculationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>proof.org_calculation.ORGANISATION_ID</code>.
     */
    public void setOrganisationId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>proof.org_calculation.ORGANISATION_ID</code>.
     */
    public Integer getOrganisationId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>proof.org_calculation.CALCULATION_ID</code>.
     */
    public void setCalculationId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>proof.org_calculation.CALCULATION_ID</code>.
     */
    public Integer getCalculationId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return OrgCalculation.ORG_CALCULATION.ORG_CALCULATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return OrgCalculation.ORG_CALCULATION.ORGANISATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return OrgCalculation.ORG_CALCULATION.CALCULATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getOrgCalculationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOrganisationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCalculationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrgCalculationRecord value1(Integer value) {
        setOrgCalculationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrgCalculationRecord value2(Integer value) {
        setOrganisationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrgCalculationRecord value3(Integer value) {
        setCalculationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrgCalculationRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrgCalculationRecord
     */
    public OrgCalculationRecord() {
        super(OrgCalculation.ORG_CALCULATION);
    }

    /**
     * Create a detached, initialised OrgCalculationRecord
     */
    public OrgCalculationRecord(Integer orgCalculationId, Integer organisationId, Integer calculationId) {
        super(OrgCalculation.ORG_CALCULATION);

        set(0, orgCalculationId);
        set(1, organisationId);
        set(2, calculationId);
    }
}
