/**
 * This class is generated by jOOQ
 */
package org.kaddiya.reporting.sql.commons.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.kaddiya.reporting.sql.commons.tables.ResetPasswordRequestEntry;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResetPasswordRequestEntryRecord extends UpdatableRecordImpl<ResetPasswordRequestEntryRecord> implements Record4<Integer, Integer, String, Timestamp> {

    private static final long serialVersionUID = -1001583712;

    /**
     * Setter for <code>proof.reset_password_request_entry.RESET_PASSWORD_REQUEST_ID</code>.
     */
    public void setResetPasswordRequestId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>proof.reset_password_request_entry.RESET_PASSWORD_REQUEST_ID</code>.
     */
    public Integer getResetPasswordRequestId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>proof.reset_password_request_entry.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>proof.reset_password_request_entry.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>proof.reset_password_request_entry.RESET_PASSWORD_LINK_TOKEN</code>.
     */
    public void setResetPasswordLinkToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>proof.reset_password_request_entry.RESET_PASSWORD_LINK_TOKEN</code>.
     */
    public String getResetPasswordLinkToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>proof.reset_password_request_entry.RESET_PASSWORD_TOKEN_EXPIRY_TIME</code>.
     */
    public void setResetPasswordTokenExpiryTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>proof.reset_password_request_entry.RESET_PASSWORD_TOKEN_EXPIRY_TIME</code>.
     */
    public Timestamp getResetPasswordTokenExpiryTime() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY.RESET_PASSWORD_REQUEST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY.RESET_PASSWORD_LINK_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY.RESET_PASSWORD_TOKEN_EXPIRY_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getResetPasswordRequestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getResetPasswordLinkToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getResetPasswordTokenExpiryTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetPasswordRequestEntryRecord value1(Integer value) {
        setResetPasswordRequestId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetPasswordRequestEntryRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetPasswordRequestEntryRecord value3(String value) {
        setResetPasswordLinkToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetPasswordRequestEntryRecord value4(Timestamp value) {
        setResetPasswordTokenExpiryTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetPasswordRequestEntryRecord values(Integer value1, Integer value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResetPasswordRequestEntryRecord
     */
    public ResetPasswordRequestEntryRecord() {
        super(ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY);
    }

    /**
     * Create a detached, initialised ResetPasswordRequestEntryRecord
     */
    public ResetPasswordRequestEntryRecord(Integer resetPasswordRequestId, Integer userId, String resetPasswordLinkToken, Timestamp resetPasswordTokenExpiryTime) {
        super(ResetPasswordRequestEntry.RESET_PASSWORD_REQUEST_ENTRY);

        set(0, resetPasswordRequestId);
        set(1, userId);
        set(2, resetPasswordLinkToken);
        set(3, resetPasswordTokenExpiryTime);
    }
}
